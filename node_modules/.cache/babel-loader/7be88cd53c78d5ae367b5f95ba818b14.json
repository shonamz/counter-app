{"ast":null,"code":"import _classCallCheck from \"/Users/anabella/counter-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anabella/counter-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anabella/counter-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anabella/counter-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anabella/counter-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/anabella/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\nimport { link } from \"fs\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n\n    _this.handleIncrement = function (product) {\n      console.log(product); // console.log(\"incrment clicked\", this);\n\n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"renderTags\",\n    value: function renderTags() {\n      if (this.state.tags.length === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"there are no tags\");\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, this.state.tags.map(function (tag) {\n        return React.createElement(\"li\", {\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, tag);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return (//   <div>\n        //     {this.state.tags.length === 0 && \"please create a new tag\"}\n        //     {this.renderTags()}\n        //   </div>\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \" \", React.createElement(\"span\", {\n          className: this.getBadgeClasses(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, this.formatCount(), \">\"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.handleIncrement(product);\n          },\n          className: \"btn btn-secondary btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Increment\"))\n      );\n    }\n  }, {\n    key: \"getBadgeClasses\",\n    value: function getBadgeClasses() {\n      var classes = \"badge m-2 badge-\";\n      classes += this.state.count === 0 ? \"warning\" : \"primary\";\n      return classes;\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var count = this.state.count;\n      return count === 0 ? \"zero\" : count;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/anabella/counter-app/src/components/counter.jsx"],"names":["React","Component","link","Counter","state","count","tags","handleIncrement","product","console","log","setState","length","map","tag","getBadgeClasses","formatCount","classes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,IAArB;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,K;;UAgBRC,e,GAAkB,UAAAC,OAAO,EAAI;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAD2B,CAE3B;;AACA,YAAKG,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACD,K;;;;;;;iCAfY;AACX,UAAI,KAAKD,KAAL,CAAWE,IAAX,CAAgBM,MAAhB,KAA2B,CAA/B,EAAkC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AAClC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKR,KAAL,CAAWE,IAAX,CAAgBO,GAAhB,CAAoB,UAAAC,GAAG;AAAA,eACtB;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeA,GAAf,CADsB;AAAA,OAAvB,CADH,CADF;AAOD;;;6BAQQ;AAAA;;AACP,aACE;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH,EAEE;AAAM,UAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0C,KAAKC,WAAL,EAA1C,MAFF,EAGE;AACE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACT,eAAL,CAAqBC,OAArB,CAAN;AAAA,WADX;AAEE,UAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF;AALF;AAgBD;;;sCAEiB;AAChB,UAAIS,OAAO,GAAG,kBAAd;AACAA,MAAAA,OAAO,IAAI,KAAKb,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,aAAOY,OAAP;AACD;;;kCAEa;AAAA,UACJZ,KADI,GACM,KAAKD,KADX,CACJC,KADI;AAEZ,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;;;EAnDmBJ,S;;AAsDtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { link } from \"fs\";\n\nclass Counter extends Component {\n  state = {\n    count: 0,\n    tags: [\"tag1\", \"tag2\", \"tag3\"]\n  };\n\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>there are no tags</p>;\n    return (\n      <ul>\n        {this.state.tags.map(tag => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  handleIncrement = product => {\n    console.log(product);\n    // console.log(\"incrment clicked\", this);\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  render() {\n    return (\n      //   <div>\n      //     {this.state.tags.length === 0 && \"please create a new tag\"}\n      //     {this.renderTags()}\n      //   </div>\n      <div>\n        {\" \"}\n        <span className={this.getBadgeClasses()}>{this.formatCount()}></span>\n        <button\n          onClick={() => this.handleIncrement(product)}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n      </div>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? \"zero\" : count;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}