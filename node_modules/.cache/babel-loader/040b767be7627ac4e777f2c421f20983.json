{"ast":null,"code":"import _classCallCheck from \"/Users/anabella/counter-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anabella/counter-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anabella/counter-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anabella/counter-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anabella/counter-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/anabella/counter-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/anabella/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\nimport { link } from \"fs\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Counter).call(this));\n    _this.state = {\n      count: 0,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n\n    _this.doHandleIncrment = function () {\n      _this.handleIncrement({\n        id: 1\n      });\n    };\n\n    _this.handleIncrement = _this.handleIncrement.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"renderTags\",\n    value: function renderTags() {\n      if (this.state.tags.length === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"there are no tags\");\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, this.state.tags.map(function (tag) {\n        return React.createElement(\"li\", {\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, tag);\n      }));\n    }\n  }, {\n    key: \"handleIncrement\",\n    value: function handleIncrement(product) {\n      console.log(product); // console.log(\"incrment clicked\", this);\n\n      this.setState({\n        count: this.state.count + 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (//   <div>\n        //     {this.state.tags.length === 0 && \"please create a new tag\"}\n        //     {this.renderTags()}\n        //   </div>\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \" \", React.createElement(\"span\", {\n          className: this.getBadgeClasses(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, this.formatCount(), \">\"), React.createElement(\"button\", {\n          onClick: this.handleIncrement,\n          className: \"btn btn-secondary btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"Increment\"))\n      );\n    }\n  }, {\n    key: \"getBadgeClasses\",\n    value: function getBadgeClasses() {\n      var classes = \"badge m-2 badge-\";\n      classes += this.state.count === 0 ? \"warning\" : \"primary\";\n      return classes;\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var count = this.state.count;\n      return count === 0 ? \"zero\" : count;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/anabella/counter-app/src/components/counter.jsx"],"names":["React","Component","link","Counter","state","count","tags","doHandleIncrment","handleIncrement","id","bind","length","map","tag","product","console","log","setState","getBadgeClasses","formatCount","classes"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,IAArB;;IAEMC,O;;;;;AAMJ,qBAAc;AAAA;;AAAA;;AACZ;AADY,UALdC,KAKc,GALN;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,KAKM;;AAAA,UAqBdC,gBArBc,GAqBK,YAAM;AACvB,YAAKC,eAAL,CAAqB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAArB;AACD,KAvBa;;AAEZ,UAAKD,eAAL,GAAuB,MAAKA,eAAL,CAAqBE,IAArB,uDAAvB;AAFY;AAGb;;;;iCAEY;AACX,UAAI,KAAKN,KAAL,CAAWE,IAAX,CAAgBK,MAAhB,KAA2B,CAA/B,EAAkC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AAClC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,KAAL,CAAWE,IAAX,CAAgBM,GAAhB,CAAoB,UAAAC,GAAG;AAAA,eACtB;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeA,GAAf,CADsB;AAAA,OAAvB,CADH,CADF;AAOD;;;oCAEeC,O,EAAS;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EADuB,CAEvB;;AACA,WAAKG,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACD;;;6BAIQ;AACP,aACE;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH,EAEE;AAAM,UAAA,SAAS,EAAE,KAAKa,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0C,KAAKC,WAAL,EAA1C,MAFF,EAGE;AACE,UAAA,OAAO,EAAE,KAAKX,eADhB;AAEE,UAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF;AALF;AAgBD;;;sCAEiB;AAChB,UAAIY,OAAO,GAAG,kBAAd;AACAA,MAAAA,OAAO,IAAI,KAAKhB,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,aAAOe,OAAP;AACD;;;kCAEa;AAAA,UACJf,KADI,GACM,KAAKD,KADX,CACJC,KADI;AAEZ,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;;;EA1DmBJ,S;;AA6DtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { link } from \"fs\";\n\nclass Counter extends Component {\n  state = {\n    count: 0,\n    tags: [\"tag1\", \"tag2\", \"tag3\"]\n  };\n\n  constructor() {\n    super();\n    this.handleIncrement = this.handleIncrement.bind(this);\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>there are no tags</p>;\n    return (\n      <ul>\n        {this.state.tags.map(tag => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  handleIncrement(product) {\n    console.log(product);\n    // console.log(\"incrment clicked\", this);\n    this.setState({ count: this.state.count + 1 });\n  }\n  doHandleIncrment = () => {\n    this.handleIncrement({ id: 1 });\n  };\n  render() {\n    return (\n      //   <div>\n      //     {this.state.tags.length === 0 && \"please create a new tag\"}\n      //     {this.renderTags()}\n      //   </div>\n      <div>\n        {\" \"}\n        <span className={this.getBadgeClasses()}>{this.formatCount()}></span>\n        <button\n          onClick={this.handleIncrement}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n      </div>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? \"zero\" : count;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}